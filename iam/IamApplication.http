# 所有的地址来自 AuthorizationServerSettings.builder
### 认证服务端版本
GET /version
HOST: 127.0.0.1:9000
Content-Type: application/x-www-form-urlencoded
Authorization: Basic user1 password
# Basic 登录时注意Cookie本地缓存


### 用户登录
POST /login
HOST: 127.0.0.1:9000
Content-Type: application/x-www-form-urlencoded
Authorization: Basic user2 password


### 用户授权
# @no-redirect
POST /oauth2/authorize
HOST: 127.0.0.1:9000
Content-Type: application/x-www-form-urlencoded
Authorization: Basic user2 password
#Authorization: Basic dXNlcjE6cGFzc3dvcmQ=

response_type=code
    &client_id=pm-client
    &redirect_uri=http://127.0.0.1:7070/oauth2/login-iam
    &state=IAM&scope=read_user+openid

> {%
   const Location = response.headers.valueOf("Location");
   client.log(Location);
   const code = Location.substring(Location.indexOf("code=") + 5,Location.indexOf("&state"))
   client.log(code);
   client.global.set("code", code);
%}

### 客户端后台发起 authorization_code
POST /oauth2/token
HOST: 127.0.0.1:9000
Content-Type: application/x-www-form-urlencoded

client_id=pm-client
    &client_secret=pm-secret
    &code={{code}}
    &grant_type=authorization_code
    &redirect_uri=http://127.0.0.1:7070/oauth2/login-iam

> {%
    client.log(client.global.get("code"));
    client.log(response.body.access_token)
    client.global.set("access_token", response.body.access_token);
%}

### iam:Userinfo
GET /userinfo
HOST: 127.0.0.1:9000
Authorization: Bearer {{access_token}}
Content-Type: application/x-www-form-urlencoded

### 客户端首页
GET /data
HOST: 127.0.0.1:7070
Content-Type: application/x-www-form-urlencoded
Authorization: Bearer {{access_token}}
